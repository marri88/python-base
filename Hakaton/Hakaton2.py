 #Задание 1:
    # Нужно создать обычный калькулятор состоящий из знаков +,-,*,/
    # 1. У пользователя просят выбрать знак
    # 2. Просят ввести 1 число
    # 3. Просят ввести 2 число
    # 4. Вывести результат
    # 5. После результата спросить у пользователя хочет он закончить или нет, если нет то калькулятор должен запускатся сначала
    # 6. Учесть то что деление на ноль невозможно

# print("Ноль в качестве знака операции"
#        "\nзавершит работу программы")
# while True:
#      s = input("Знак (+,-,*,/): ")
#      if s == '0':
#          break
#      if s in ('+', '-', '*', '/'):
#          x = float(input("x="))
#          y = float(input("y="))
#          if s == '+':
#              print("%.2f" % (x+y))
#          elif s == '-':
#              print("%.2f" % (x-y))
#          elif s == '*':
#              print("%.2f" % (x*y))
#          elif s == '/':
#              if y != 0:
#                  print("%.2f" % (x/y))
#              else:
#                  print("Деление на ноль нельзя!")
#      else:
#          print("Неверный знак операции!")

#=====================================================================================================

# Здание 2:
#     Даны три переменные "A", "B" и "C". 
#     Изменить значения этих переменных так, чтобы в "A" хранилось значение "A"+"B", 
#     в "B" хранилась разность старых значений "C" - "A", 
#     а в "C" хранилось сумма старых значений "A" + "B" + "C". 
#     Например, A=0, B=2, C=5, тогда новые значения A=2, B=5 и C=7.

# a = 0
# b = 2
# c = 5

# a = a + b
# b = c - a + b
# c = a + c

# print(a, b , c)

#=======================================================================================================

#Задание 3:
  #  Пользователь вводит сторону квадрата. Найдите периметр и площадь квадрата.
# a = int(input("введите любую сторону для квадрата :"))

# z=a*a
# s=4*a
# print('площадь квадрата',z)
# print('периметр квадрата',s)

#==================================================================

# Задание 4:
    # Вам даны несколько последовательностей чисел:
    # sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
    # sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
    # sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
    # sequence_3 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70')

    # Нужно проверить, все ли числа в КАЖДОЙ последовательности уникальны.
    # Если в последовательности были найдены дубликаты ---> Выведите на экран: "Последовательность не уникальна."
    # Если в последовательности дубликатов найдено не было ---> Выведите на экран: "Последовательность уникальна."
    # Если в решении задания не присутствует цикл ---> Задание не защитано.

# arr=(14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
# setarr = set(arr)
# for i in setarr:
#     print("Все элементы уникальны")
# else:
#     print("dont unicantion")









#=======================================================================================================
# Задание 6:
#     Дано четырехзначное число. Верно ли, что цифры в нем расположены по убыванию? 
#     Например, 4311 - нет, 4321 - да, 5542 - нет, 5631 - нет, 9871 - да.

# number = list(str(input('введите ЧЕТЫРЕХЗНАЧНОЕ ЧИСЛО: ')))
# if number[0] > number [1] > number[2] > number[3]:
#     print('Да')
# else:
#     print('Нет')




# Задание 1:
    # Нужно создать обычный калькулятор состоящий из знаков +,-,*,/
    # 1. У пользователя просят выбрать знак
    # 2. Просят ввести 1 число
    # 3. Просят ввести 2 число
    # 4. Вывести результат
    # 5. После результата спросить у пользователя хочет он закончить или нет, если нет то калькулятор должен запускатся сначала
    # 6. Учесть то что деление на ноль невозможно


# Решение 1:

# while True:
#     user_symbol = input("Введите знак: ")

#     user_num_1 = int(input("Введите число 1: "))
#     user_num_2 = int(input("Введите число 2: "))

#     try:
#         if user_symbol == '+':
#             print(user_num_1 + user_num_2)

#         elif user_symbol == '-':
#             print(user_num_1 - user_num_2)

#         elif user_symbol == '*':
#             print(user_num_1 * user_num_2)

#         elif user_symbol == '/':
#             print(user_num_1 / user_num_2)
#         else:
#             print("Простите, я не знаю как это считать :(")

#         to_continue = input("Хотите продолжить?\n: ")

#         if to_continue.lower() == 'нет' or to_continue.lower() == 'no':
#             break

#     except ZeroDivisionError:
#         print("Деление на ноль запрещено!")

######################################################################

# Задание 2:
    # Даны три переменные "A", "B" и "C". 
    # Изменить значения этих переменных так, чтобы в "A" хранилось значение "A"+"B", 
    # в "B" хранилась разность старых значений "C" - "A", 
    # а в "C" хранилось сумма старых значений "A" + "B" + "C". 
    # Например, A=0, B=2, C=5, тогда новые значения A=2, B=5 и C=7.


# Решение 1:
# a = 2
# b = 3
# c = 4

# a, b, c = a+b, c-a, a+b+c

# print(a,b,c, sep='\n')


######################################################################



# Задание 3:
    # Пользователь вводит сторону квадрата. Найдите периметр и площадь квадрата.


#Решение 1:
# try:
#     side = int(input("Введите стророну квадрата: "))

#     ploshad_quadrata = side ** 2
#     print(f"Площадь квадрата: {ploshad_quadrata}")

#     perimetr_quadrata = (side + side) * 2
#     perimetr_quadrata = side * 4
#     print(f"Периметр квадрата: {perimetr_quadrata}")

# except ValueError:
#     print("Введите число!")

#######################################################################

#Задание 4:
    # Вам даны несколько последовательностей чисел:
    # sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
    # sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
    # sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
    # sequence_3 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70')

    # Нужно проверить, все ли числа в КАЖДОЙ последовательности уникальны.
    # Если в последовательности были найдены дубликаты ---> Выведите на экран: "Последовательность не уникальна."
    # Если в последовательности дубликатов найдено не было ---> Выведите на экран: "Последовательность уникальна."
    # Если в решении задания не присутствует цикл ---> Задание не защитано.

#Решение 1:
# sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
# sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
# sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
# sequence_3 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70')

# sequences = (sequence_0, sequence_1, sequence_2, sequence_3)

# for sequence in sequences:
#     if len(set(sequence)) != len(sequence):
#         print('Последовательность', sequence, 'не уникальна.')
#     else:
#         print('Последовательность', sequence, 'уникальна.')


######################################################################


# Задание 5:
    # Создайте input и спросите у пользоваетля как работает встроенная функция reversed().
    # В терминале пользователя должен ввести пример функции reversed() и отправить это вашей программе.
    # Ваша программа должна исполнить ту часть кода которую ввёл пользователь и вывести на экран результат.
    # Если пользователь ввёл что-то не по синтаксису Python поймайте это с помощью try: except:
    # Если пользователь всё ввёл верно выполните его программу.
    # Если поймали ошибку ---> Спросите снова как работает встроенная функция reversed().



#Решение 1:

# while True:
#     try:
#         user_input = input('Как работает встроенная функция reversed(): ')
#         if user_input.startswith('reversed') and len(user_input) > len('reversed'):
#             print(tuple(eval(user_input)))
#             break

#         else:
#             print("Где-то Вы ошиблись, попробуйте ещё раз...")
#             continue

#     except SyntaxError:
#         print("Где-то Вы ошиблись, попробуйте ещё раз please...")




######################################################################


# Задание 6:
#     Дано четырехзначное число. Верно ли, что цифры в нем расположены по убыванию? 
#     Например, 4311 - нет, 4321 - да, 5542 - нет, 5631 - нет, 9871 - да.


# Решение 1:
# number = input("Введите число: ")

# descending = True

# for i in range(len(number)-1):
#     if int(number[i]) <= int(number[i+1]):
#         descending = False
#         break

# if descending:
#     print(number, '- да')
# else:
#     print(number, '- нет')